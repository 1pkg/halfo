buildscript {
	repositories {
		maven {
			url 'https://maven.fabric.io/public'
		}
	}
	dependencies {
		classpath 'io.fabric.tools:gradle:1.+'
	}
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
repositories {
	maven { url 'https://maven.fabric.io/public' }
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        applicationId "com.studio.halfo"
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
		multiDexEnabled true
    }

    sourceSets.main {
        java.srcDir "src"
        res.srcDir "res"
        jniLibs.srcDir "libs"
        manifest.srcFile "AndroidManifest.xml"
        assets.srcDir "assets"
    }

    signingConfigs {
       release {
            if (project.hasProperty("RELEASE_STORE_FILE")) {
                storeFile file(RELEASE_STORE_FILE)
                storePassword RELEASE_STORE_PASSWORD
                keyAlias RELEASE_KEY_ALIAS
                keyPassword RELEASE_KEY_PASSWORD
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (project.hasProperty("RELEASE_STORE_FILE")) {
                signingConfig signingConfigs.release
            }
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':libcocos2dx')
	compile project(':gps')
	compile('com.twitter.sdk.android:twitter:1.13.0@aar') { transitive = true; exclude module: 'support-v4' }
}

task cleanAssets(type: Delete) {
    delete 'assets'
}
task copyAssets(type: Copy) {
    from '../../sts'
    into 'assets'
}

clean.dependsOn cleanAssets
preBuild.dependsOn copyAssets